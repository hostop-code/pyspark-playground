version: '3.8'

networks:
  hadoop-network:
    external: true

volumes:
  postgres_hms_data:
    
services:
  postgresdb:
    hostname: hivemetastore
    build:
          dockerfile: Dockerfile
          context: ./postgres/
    image: kevinity310/postgres-hms:11.5
    container_name: postgresdb
    environment:
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    # volumes:
    #   - postgres_hms_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - hadoop-network

  hive-metastore:
    container_name: hive-metastore
    hostname: hive-metastore
    build:
      dockerfile: Dockerfile
      context: ./hive/
    image: kevinity310/hive:3.1.3
    entrypoint: ['./entrypoint.sh', 'hive-metastore']
    depends_on:
      - postgresdb
      # - hdfs-namenode
    expose:
      - 9083
    ports:
      - '9083:9083' # Hive Metastore service
    networks:
      - hadoop-network
    deploy:
      resources:
        limits:
          cpus: '2'  # Set the desired CPU limit (e.g., half of a core)
          memory: '2G'
    # healthcheck:
    #   test: ["CMD", "curl", "--fail", "http://localhost:9083"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3

  # hive-server2: # Not use
  #   container_name: hive-server2
  #   hostname: hive-server2
  #   image: kevinity310/hive:3.1.3
  #   entrypoint: ['./entrypoint.sh', 'hive-server2']
  #   depends_on:
  #     - hive-metastore
  #   ports:
  #     - '10000:10000' # Hive Metastore Database 
  #     - '10002:10002' # Hive UI
  #   networks:
  #     - hadoop-network
  #   healthcheck:
  #     test: ["CMD", "curl", "--fail", "http://localhost:10002"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

# docker compose -f docker-compose-hive.yml build
# docker compose -f docker-compose-hive.yml up -d

  



